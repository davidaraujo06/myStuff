import pandas as pd
import json

json_data = {
    "units_with_nan_technology": [
        "IGVD113",
        "GESVD86",
        "NXVD273",
        "GESVD84",
        "IGVD130",
        "IGVD138",
        "CLIVD65",
        "GESVD89",
        "CEVD391",
        "GESVD90",
        "GALVD11",
        "EGVD473",
        "NXVD271",
        "NXVD307",
        "ELITC01",
        "MINIC01",
        "CEVD375",
        "EBLVD60",
        "NXVD272",
        "IGNVD92",
        "CEVD382",
        "NXVD288",
        "CEVD296",
        "GSVD106",
        "IGVD120",
        "IGNVD82",
        "GESVD87",
        "GESVD85",
        "VIERE01",
        "IGVD111",
        "IGVD117",
        "GALVD24",
        "SHEVD24",
        "GSVD108",
        "VARAC01",
        "CEVD371",
        "GEBLCV1",
        "HMSROR1",
        "HOREC01",
        "IGVD106",
        "GESVD83",
        "NXVD303",
        "EBLVD67",
        "GESVD82",
        "EYPRE04",
        "ESCCC3X",
        "CEVD390",
        "GALVD16",
        "ENURE10",
        "IGVD104",
        "CEVD376",
        "LAOBC01",
        "ALIOC01",
        "GALVD28",
        "CEVD353",
        "NXVD268",
        "DTVD046",
        "GALVD31",
        "HAMRE01",
        "GALVD29",
        "PTENC01",
        "CLIVD62",
        "GSVD102",
        "JOIRC22",
        "DETRC17",
        "EGVD474",
        "EGAZC01",
        "IGVD121",
        "NXVD286",
        "CANXC01",
        "ACAVADB",
        "DTVD018",
        "IGVD107",
        "STVRE02",
        "ENEPC01",
        "IGNVD47",
        "GSVD112",
        "GNVD198",
        "GALVD10",
        "PULSC01",
        "LEZIV02",
        "WATRE06",
        "CEVD395",
        "WATRM08",
        "CEVD356",
        "ENEDC01",
        "HISVD52",
        "CEVD393",
        "CEVD380",
        "EBLVD71",
        "IGVD131",
        "IGVD132",
        "CEVD361",
        "GOIRE01",
        "ISYDC01",
        "GNVD187",
        "BECVD03",
        "ELVD020",
        "ENURE07",
        "WATRM07",
        "NXVD282",
        "CLIVD63",
        "CLIVD56",
        "IGVD141",
        "MONDEGB",
        "NXVD254",
        "GESVD98",
        "NXVD295",
        "OENC02",
        "MLTG",
        "WMVD199",
        "SOECC01",
        "EBLVD59",
        "GESVD88",
        "DETVD58",
        "IBDSC01",
        "DTVD044",
        "GREPSV1",
        "GASVD17",
        "EGVD475",
        "MUESC01",
        "GSLRE02",
        "GALVD17",
        "IGNVD87",
        "GUISC01",
        "VTERM22",
        "INATV02",
        "ENSTC01",
        "TJEG",
        "GESVD95",
        "NXVD263",
        "DRKRM01",
        "IGVD118",
        "CEVD363",
        "TOTRE01",
        "HISVD45",
        "EDRE006",
        "NXVD266",
        "EBLVD62",
        "SHEVD13",
        "E21VD07",
        "CEVD378",
        "GALVD22",
        "EDPCVD1",
        "CEVD389",
        "NXVD293",
        "EGVD484",
        "GALVD15",
        "GMEEC01",
        "GSVD111",
        "IGVD123",
        "NXVD298",
        "HISVD48",
        "NXVD252",
        "ENARM16",
        "ISMRE01",
        "IGNVD81",
        "NXVD256",
        "EBLVD66",
        "WMVD198",
        "E21VD06",
        "DILUC01",
        "ELVD026",
        "GESVD91",
        "IGNVD98",
        "HAMPC01",
        "ADSNC01",
        "GSMGV2",
        "EBLVD72",
        "CEVD388",
        "IMPEC01",
        "SHEVD12",
        "MIP",
        "FUTVD07",
        "CEVD357",
        "GESVD94",
        "GNVD197",
        "VGERE43",
        "IGNVD95",
        "NXVD284",
        "GESVD23",
        "NXVD274",
        "GEMVD32",
        "IGNVD78",
        "ELVD019",
        "TAJO",
        "IGVD109",
        "SHEVD11",
        "SOCRC17",
        "WATRE05",
        "JOIRC19",
        "HISVD46",
        "SHEVD17",
        "NXVD302",
        "NXVD305",
        "DTVD038",
        "VTERM27",
        "NXVD277",
        "ELEAUX",
        "BUTIC01",
        "CEVD383",
        "ASIVD06",
        "EBLVD70",
        "NXVD301",
        "FUTVD08",
        "IGVD119",
        "ELVD027",
        "IGVD112",
        "VTERM26",
        "CLIVD64",
        "CEVD396",
        "EDPGPR2",
        "SHEVD10",
        "IGVD102",
        "GESVD15",
        "FUTVD11",
        "TUELC01",
        "DYNFC01",
        "CEVD386",
        "AGUG",
        "EGVD483",
        "VGERE42",
        "CLIVD53",
        "GSLRE07",
        "NXVD289",
        "GUIRE01",
        "GALVD14",
        "IGVD105",
        "WATRE04",
        "ISMRE02",
        "SHEVD09",
        "IBEVD21",
        "TEV2C01",
        "DTVD063",
        "IGVD128",
        "SHEVD25",
        "SHEVD19",
        "GESVD78",
        "GALVD23",
        "GEMVD30",
        "IGVD103",
        "ELVD022",
        "SOPRC01",
        "GESVD96",
        "CEVD374",
        "VTERM29",
        "IGVD101",
        "NXVD291",
        "WATRE03",
        "CEVD370",
        "CEVD358",
        "ELVD015",
        "GESVD79",
        "IGNRM03",
        "ANTUC01",
        "ELVD021",
        "MASRE01",
        "IGVD124",
        "GESVD97",
        "ENDRE01",
        "GALVD25",
        "EDRE007",
        "ERPCC01",
        "IGVD122",
        "CLIVD61",
        "NXVD292",
        "HISVD51",
        "CLIVD58",
        "ELVD023",
        "ESCCC1X",
        "DTVD050",
        "IGNVD97",
        "COGVD10",
        "IGNVD83",
        "ALDDC01",
        "CLIVD57",
        "IGVD116",
        "DTVD006",
        "ALAHC01",
        "NXVD296",
        "IGVD110",
        "NXVD304",
        "GSLRE03",
        "IGVD133",
        "JOIRC24",
        "ELVD025",
        "BIRRE02",
        "JOIRC21",
        "SHEVD23",
        "GSVD105",
        "REUSC01",
        "DOBLC01",
        "GSVD107",
        "IGVD100",
        "GSVD100",
        "WATRE07",
        "HISVD50",
        "ELVD017",
        "EGEDRE4",
        "GEMVD31",
        "ACNHC01",
        "CEVD399",
        "GUISC02",
        "IGVD125",
        "IGVD114",
        "CEVD367",
        "MIEU",
        "NXVD275",
        "ISMRE03",
        "IGVD137",
        "GSVD109",
        "AHORC01",
        "JOIRC20",
        "CEVD201",
        "IGNVD99",
        "CEVD368",
        "NXVD278",
        "IGVD108",
        "SHEVD20",
        "ELERV02",
        "GMETGV1",
        "CEVD359",
        "GSVD110",
        "IGVD126",
        "CEVD373",
        "DTVD064",
        "GACVD7",
        "URIIC01",
        "VGERE44",
        "NXVD261",
        "GMEC01",
        "IGVD139",
        "GESVD80",
        "SHEVD26",
        "CLIVD59",
        "EGLRM01",
        "ELVD016",
        "SHEVD14",
        "CEVD255",
        "GNVD194",
        "EGVD479",
        "DTVD066",
        "NXVD265",
        "DUER",
        "QUALC01",
        "AMBIETX",
        "WATRM03",
        "IGVD142",
        "VGERE46",
        "MIE",
        "GSLRE06",
        "EGVD480",
        "EGVD476",
        "COGVD11",
        "GVITLC1",
        "EGVD478",
        "IGVD136",
        "LAURM12",
        "GALVD12",
        "CLIVD69",
        "CEVD381",
        "IGNVD79",
        "GALVD19",
        "EGPRE52",
        "GOLDV02",
        "NXVD264",
        "NXVD255",
        "WATRE02",
        "NXVD306",
        "ELVD024",
        "IGNVD96",
        "CEVD392",
        "NXVD285",
        "CEVD385",
        "CLIVD55",
        "GNVD200",
        "CLIVD66",
        "CLIVD60",
        "NXVD270",
        "GSVD101",
        "ELVD018",
        "CEVD366",
        "SHEVD21",
        "DTVD016",
        "SHEVD16",
        "CEVD360",
        "CEVD379",
        "E21VD08",
        "CCATC01",
        "NXVD260",
        "TOTRM02",
        "EBLVD63",
        "LAURM13",
        "FUTVD09",
        "GESVD93",
        "IPG",
        "DTVD022",
        "WMVD204",
        "NCERM22",
        "DTVD042",
        "SHEVD18",
        "IGVD115",
        "MUEL",
        "CEVD372",
        "NXVD279",
        "HISVD49",
        "GALVD30",
        "BIRRE01",
        "NXVD299",
        "CADLC01",
        "GDREUV1",
        "DINEC01",
        "NXVD269",
        "NXVD287",
        "CEVD398",
        "GALVD20",
        "EBLVD68",
        "GESVD99",
        "NXVD262",
        "SESVD13",
        "IBLEC02",
        "GESVD92",
        "TOTRM01",
        "EGVD284",
        "NXVD280",
        "ELVD028",
        "METEC01",
        "CLIVD68",
        "GSLRE04",
        "CEVD387",
        "EBLVD64",
        "COGVD12",
        "GALVD18",
        "NXVD297",
        "IGNRM04",
        "BNPRE01",
        "GSLRE01",
        "GASVD18",
        "IGVD134",
        "HCGVD17",
        "CEVD384",
        "GNVD193",
        "WMVD201",
        "JOIRC23",
        "CEVD394",
        "BAKC01",
        "ENURE09",
        "LAURM11",
        "GSLRE05",
        "NXVD276",
        "CONSC01",
        "FUTVD06",
        "GNVD191",
        "ELVD029",
        "SHEVD22",
        "EFGVD12",
        "SHEVD15",
        "NOVAC02",
        "DTVD039",
        "VIRRE02",
        "IGVD135",
        "ZUGPC01",
        "GALVD21",
        "GENSOLF",
        "IBEVD20",
        "NXVD281",
        "NXVD267",
        "HISVD47",
        "VTERM24",
        "NXVD300",
        "EFIVD01",
        "GSVD103",
        "FUTVD10",
        "KISHC01",
        "GALVD13",
        "EGVD481",
        "ESCCC2X",
        "SYENC01",
        "NXVD294",
        "CLIVD67",
        "DTVD065",
        "FENVD06",
        "VTERC01",
        "IGNVD80",
        "DEPOC01",
        "GNVD195",
        "VGERE45",
        "DTVD041",
        "CEVD354",
        "CEVD277",
        "GSVD104",
        "EBLVD65",
        "IGVD129",
        "PLENC02",
        "CEVD369",
        "CEVD377",
        "GESVD81",
        "GUIG",
        "CEVD397",
        "JOIRC25",
        "IGVD140",
        "ZRMRE01"
    ]
}

# Carregar os códigos com tecnologia NAN
nan_units = json_data["units_with_nan_technology"]

# Caminho para o arquivo Excel original
input_file = 'LISTA_UNIDADES.XLS'

# Ler o arquivo Excel, ignorando as 4 primeiras linhas (ajuste conforme necessário)
df = pd.read_excel(input_file, skiprows=4)

# Exibir as primeiras linhas para verificar a estrutura
print("Primeiras linhas do DataFrame:")
print(df.head())

# Selecionar as colunas que realmente interessam
df = df.iloc[:, :7]

# Ajustar os nomes das colunas, se necessário
df.columns = [
    'Unit',
    'Description',
    'Agent',
    'Percentage',
    'Unit Type',
    'Country',
    'Technology'
]

# Filtrar as unidades com tecnologia NAN
df_filtered = df[df['Unit'].isin(nan_units)]

# Caminho para o arquivo Excel filtrado
output_file = 'NEW.xlsx'

# Salvar o DataFrame filtrado em um novo arquivo Excel
df_filtered.to_excel(output_file, index=False)

print(f'Dados filtrados foram salvos em: {output_file}')
